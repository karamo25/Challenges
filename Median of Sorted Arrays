/* Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log (m+n)).

Example1:
Input:nums1 = [1,3], nums2 = [2]
Output:2.00000
Explanation: merged array = [1,2,3] and median is 2.

Example2:
Input:nums1 = [1,2], nums2 = [3,4]
Output:2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.
*/

using System;

namespace Challenge
{
    class Program
    {
        #region Returns Median of Two Sorted List

        static double getMedian(int[] arr)
        {
            int n = arr.Length;

            // if array is even
            if(n % 2 == 0)
            {
                int z = n / 2;
                int e = arr[z];
                int q = arr[z - 1];

                double ans = (e + q) / 2.0;
                return ans;
            }
            //if array is odd
            else
            {
                int z = n / 2;
                return arr[z];
            }

        }
        #endregion

        static void Main(string[] args)
        {
            Console.WriteLine("Median of Two Sorted List");

            int[] a1 = { 1,2 };
            int[] a2 = {3,4};

            var list = new List<int>();
            list.AddRange(a1);
            list.AddRange(a2);

            int[] a3 = list.ToArray();
            Array.Sort(a3);



            Console.WriteLine("Median: " + getMedian(a3));

        }
    }
}
